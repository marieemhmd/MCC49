@{
    Layout = "_LayoutAdmin";
    ViewData["Title"] = "Dashboard";
}

<div class="row">
    <!-- Column -->
    <div class="col-md-6 col-lg-3 col-xlg-3">
        <div class="card card-inverse card-warning">
            <div class="box bg-warning text-center">
                <h1 id="TotalRequest" class="font-light text-white">Loading...</h1>
                <h6 class="text-white">Total Request</h6>
            </div>
        </div>
    </div>
    <!-- Column -->
    <div class="col-md-6 col-lg-3 col-xlg-3">
        <div class="card card-primary card-info">
            <div class="box bg-info text-center">
                <h1 id="WaitingRequest" class="font-light text-white">Loading...</h1>
                <h6 class="text-white">Waiting</h6>
            </div>
        </div>
    </div>
    <!-- Column -->
    <div class="col-md-6 col-lg-3 col-xlg-3">
        <div class="card card-inverse card-success">
            <div class="box text-center">
                <h1 id="ApproveRequest" class="font-light text-white">Loading...</h1>
                <h6 class="text-white">Approve</h6>
            </div>
        </div>
    </div>
    <!-- Column -->
    <div class="col-md-6 col-lg-3 col-xlg-3">
        <div class="card card-inverse card-danger">
            <div class="box text-center">
                <h1 id="RejectRequest" class="font-light text-white">Loading...</h1>
                <h6 class="text-white">Reject</h6>
            </div>
        </div>
    </div>
</div>

<div class="card-block">
    <div class="card mx-auto" style="width:100%;">
        <div id="AreaReasonRequest"></div>
    </div>
</div>

<div class="card-block">
    <div class="card mx-auto" style="width:100%;">
        <div id="PieReasonRequest"></div>
    </div>
</div>

<!-- Column -->
<div class="col-md-12">
    <div class="card">
        <div class="row">
            <div class="col-md-6">
                <div class="card m-5">
                    <div class="card mx-auto" style="width:100%;">
                        <div id="requestPosition"></div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card-block m-5">
                    <div class="card mx-auto" style="width:100%;">
                        <div id="requestDepartment"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Column -->
<div class="col-md-12">
    <div class="card">
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card mx-auto" style="width:100%;">
                        <div id="RemainingQuota"></div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card-block">
                    <div class="card mx-auto" style="width:100%;">
                        <div id="ReasonRequest"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        // Chart Request by Position
        var options = {
            chart: {
                height: 350,
                type: 'bar',
            },
            plotOptions: {
                bar: {
                    borderRadius: 5,
                    horizontal: true,
                }
            },
            dataLabels: {
                enabled: true
            },
            series: [],
            title: {
                text: 'Total Request by Position',
            },
            noData: {
                text: 'Loading...'
            }
        }
        var chart1 = new ApexCharts(
            document.querySelector("#requestPosition"),
            options
        );
        var url = 'https://localhost:44358/api/Chart/Position';
        $.getJSON(url, function (response) {
            var result = [];
            var temp = null;
            response.result.map(function (object, i) {

                temp = { x: object.positionName, y: object.total };
                result.push(temp)
            })
            chart1.updateSeries([{
                name: 'Total ',
                data: result
            }])
        })

        chart1.render();

        // Chart Request by Department
        var options = {
            chart: {
                height: 350,
                type: 'bar',
            },
            plotOptions: {
                bar: {
                    borderRadius: 5,
                    horizontal: true,
                }
            },
            dataLabels: {
                enabled: true
            },
            series: [],
            title: {
                text: 'Total Request by Department',
            },
            noData: {
                text: 'Loading...'
            }
        }
        var chart2 = new ApexCharts(
            document.querySelector("#requestDepartment"),
            options
        );
        var url = 'https://localhost:44358/api/Chart/Department';
        $.getJSON(url, function (response) {
            //console.log(response);
            var result = [];
            var temp = null;
            response.result.map(function (object, i) {

                temp = { x: object.deptName, y: object.totalQoutaDept };
                result.push(temp)
            })
            chart2.updateSeries([{
                name: 'Total ',
                data: result
            }])
        })

        chart2.render();

        // Chart Request by RemainingQuota
        var options = {
            chart: {
                height: 350,
                type: 'bar',
            },
            plotOptions: {
                bar: {
                    borderRadius: 5
                }
            },
            dataLabels: {
                enabled: false
            },
            series: [],
            title: {
                text: 'Total by leave quota',
            },
            noData: {
                text: 'Loading...'
            }
        }
        var chart3 = new ApexCharts(
            document.querySelector("#RemainingQuota"),
            options
        );
        var url = 'https://localhost:44358/api/Chart/RemainingQuota';
        $.getJSON(url, function (response) {
            //console.log(response);
            var result = [];
            var temp = null;
            response.result.map(function (object, i) {
                temp = { x: object.leaveQuota, y: object.totalLeaveQuota };
                result.push(temp)
            })
            chart3.updateSeries([{
                name: 'Total ',
                data: result
            }])
        })

        chart3.render();

        // Chart ReasonRequest
        var options = {
            chart: {
                height: 350,
                type: 'bar',
            },
            plotOptions: {
                bar: {
                    borderRadius: 5,
                    horizontal: true,
                }
            },
            dataLabels: {
                enabled: true
            },
            series: [],
            title: {
                text: 'Total leave by type',
            },
            noData: {
                text: 'Loading...'
            }
        }
        var chart4 = new ApexCharts(
            document.querySelector("#ReasonRequest"),
            options
        );
        var url = 'https://localhost:44358/api/Chart/ReasonRequest';
        $.getJSON(url, function (response) {
            //console.log(response);
            var result = [];
            var temp = null;
            response.result.map(function (object, i) {
                temp = { x: object.reasonRequest, y: object.totalStatus };
                result.push(temp)
            })
            chart4.updateSeries([{
                name: 'Total ',
                data: result
            }])

        })

        chart4.render();

        //Card
        var url = 'https://localhost:44358/api/Request';
        $.getJSON(url, function (result) {
            var obj = JSON.parse(JSON.stringify(result['data']));
            //var status = obj.map(x => x.requestStatus).length;
            var status = obj.map(x => x.requestStatus);

            function checkstatuswaiting(temp) {
                return temp == undefined || temp == 3;
            }

            function checkstatus(temp) {
                return temp == 1;
            }

            function checkstatusreject(temp) {
                return temp == 2 || temp == 4;
            }

            $("#TotalRequest").text(result['data'].length);
            $("#WaitingRequest").text(status.filter(checkstatuswaiting).length);
            $("#ApproveRequest").text(status.filter(checkstatus).length);
            $("#RejectRequest").text(status.filter(checkstatusreject).length);
        })

        // Chart ReasonRequest
        var options = {
            series: [],
            title: {
                text: 'Leave by type',
            },
            chart: {
                width: 600,
                type: 'donut',
            },
            labels: [],
            responsive: [{
                breakpoint: 200,
                options: {
                    chart: {
                        width: 600
                    },
                    legend: {
                        show: false,
                        position: "bottom",
                        floating: false,
                    }
                }
            }]
        };

        var chart5 = new ApexCharts(document.querySelector("#PieReasonRequest"), options);
        chart5.render();
        $.ajax({
            url: "https://localhost:44358/api/Request",
            success: function (result) {
                const byRequestDate = []
                const data = []
                const total = []
                const leaveType = []

                result.data.map(e => byRequestDate.push({ type: e.reasonRequest }))
                byRequestDate.map(val => {
                    const index = data.findIndex(e => e.type == val.type)
                    if (index < 0) {
                        val.total = 1
                        data.push(val)
                    } else {
                        data[index].total += 1
                    }
                });

                data.map(x => { total.push(x.total) });
                data.map(x => { leaveType.push(x.type) });
                chart5.updateOptions({
                    series: total,
                    labels: leaveType
                })
            }
        })

        // Request by Date
        var options = {
            series: [],
            title: {
                text: 'Leave Request by date',
            },
            chart: {
                height: 280,
                type: 'area',
                stacked: true,
                zoom: {
                    enabled: false
                }
            },
            dataLabels: {
                enabled: false
            },
            stroke: {
                curve: 'smooth'
            },
            xaxis: {
                type: 'datetime'
            },
            tooltip: {
                x: {
                    format: 'dd MMMM yyyy'
                },
            },
        };
        // name , data, categories
        var chart6 = new ApexCharts(document.querySelector("#AreaReasonRequest"), options);
        chart6.render();

        axios({
            method: 'GET',
            url: 'https://localhost:44358/api/Chart/RequestByDate',
        }).then(function (response) {
            console.log(response);
            obj = response['data'];

            var arr = [];
            var temp = null;
            obj.result.map(function (i) {
                temp = { x: i.date, y: i.totalRequest };
                arr.push(temp)
            })
            // Jika mau stacked area
            // di series isinya ada type dan total
            // categories berisi tanggal
            chart6.updateSeries([{
                // series-1
                name: 'Total',
                data: arr
            }])
        })

    </script>
}
